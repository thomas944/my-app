[{"/Users/pham/Desktop/Coding/Project/rest-app/client/src/index.tsx":"1","/Users/pham/Desktop/Coding/Project/rest-app/client/src/App.tsx":"2","/Users/pham/Desktop/Coding/Project/rest-app/client/src/routes/Home.tsx":"3","/Users/pham/Desktop/Coding/Project/rest-app/client/src/routes/RestaurantDetailPage.tsx":"4","/Users/pham/Desktop/Coding/Project/rest-app/client/src/routes/UpdatePage.tsx":"5","/Users/pham/Desktop/Coding/Project/rest-app/client/src/components/Header.tsx":"6","/Users/pham/Desktop/Coding/Project/rest-app/client/src/components/AddRestaurant.tsx":"7","/Users/pham/Desktop/Coding/Project/rest-app/client/src/components/RestaurantList.tsx":"8","/Users/pham/Desktop/Coding/Project/rest-app/client/src/context/restaurantsContext.tsx":"9","/Users/pham/Desktop/Coding/Project/rest-app/client/src/components/UpdateRestaurant.tsx":"10","/Users/pham/Desktop/Coding/Project/rest-app/client/src/api/api.ts":"11","/Users/pham/Desktop/Coding/Project/rest-app/client/src/components/Rating.tsx":"12","/Users/pham/Desktop/Coding/Project/rest-app/client/src/components/Reviews.tsx":"13","/Users/pham/Desktop/Coding/Project/rest-app/client/src/components/AddReview.tsx":"14"},{"size":210,"mtime":1672247576712,"results":"15","hashOfConfig":"16"},{"size":834,"mtime":1672293845819,"results":"17","hashOfConfig":"16"},{"size":340,"mtime":1672280052727,"results":"18","hashOfConfig":"16"},{"size":1132,"mtime":1672604802125,"results":"19","hashOfConfig":"16"},{"size":269,"mtime":1672546105780,"results":"20","hashOfConfig":"16"},{"size":195,"mtime":1672249278749,"results":"21","hashOfConfig":"16"},{"size":2036,"mtime":1672550005288,"results":"22","hashOfConfig":"16"},{"size":2583,"mtime":1672604960743,"results":"23","hashOfConfig":"16"},{"size":1175,"mtime":1672555039566,"results":"24","hashOfConfig":"16"},{"size":2120,"mtime":1672604128387,"results":"25","hashOfConfig":"16"},{"size":2000,"mtime":1673026374281,"results":"26","hashOfConfig":"16"},{"size":552,"mtime":1672596536125,"results":"27","hashOfConfig":"16"},{"size":2607,"mtime":1672596492595,"results":"28","hashOfConfig":"16"},{"size":1967,"mtime":1672600429757,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"si0j8t",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/pham/Desktop/Coding/Project/rest-app/client/src/index.tsx",[],[],[],"/Users/pham/Desktop/Coding/Project/rest-app/client/src/App.tsx",["79"],[],"import React from 'react'\nimport { BrowserRouter, Routes, Route } from 'react-router-dom'\nimport Home from './routes/Home.tsx'\nimport RestaurantDetailPage from './routes/RestaurantDetailPage.tsx'\nimport UpdatePage from './routes/UpdatePage.tsx'\nimport { RestaurantsContextProvider } from './context/restaurantsContext.tsx'\nimport { useState } from 'react'\n\nconst App = () => {  \n\n  return (\n    <RestaurantsContextProvider>\n      <div className='container'>\n        <BrowserRouter>\n          <Routes>\n            <Route path='/' element={<Home />} />\n            <Route path='/restaurants/:id/update' element={<UpdatePage />} /> \n            <Route path='/restaurants/:id' element={<RestaurantDetailPage />} />\n          </Routes>\n        </BrowserRouter>\n      </div>\n    </RestaurantsContextProvider>    \n  )\n}\n\nexport default App;\n","/Users/pham/Desktop/Coding/Project/rest-app/client/src/routes/Home.tsx",[],[],"/Users/pham/Desktop/Coding/Project/rest-app/client/src/routes/RestaurantDetailPage.tsx",["80"],[],"import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getRestaurant } from '../api/api.ts';\nimport AddReview from '../components/AddReview.tsx';\nimport Rating from '../components/Rating.tsx';\nimport Reviews from '../components/Reviews.tsx';\n\nconst RestaurantDetailPage = () => {\n  const {id} = useParams();\n  const [currRes, setCurrRes] = useState('')\n  \n  const fetchData = async (id:any) => {\n    const currentRestaurant = await getRestaurant(id);\n    setCurrRes(currentRestaurant);\n  }\n\n  useEffect(() => {\n    fetchData(id)\n  },[])\n\n  if(currRes){\n    return (\n      <>\n      <h1 className='text-center display-1'>{currRes.restaurant.name}</h1>\n      <div className='text-center'>\n        <Rating rating={currRes.restaurant.average_rating}/>\n        <span className='text ml-1'>\n        {currRes.restaurant.count\n                ? `(${currRes.restaurant.count})`\n                : \"(0)\"}\n        </span>\n      </div>\n      <div className=\"mt-3\">\n        <Reviews reviews={currRes} />\n      </div>\n      <AddReview />\n      </>\n  )\n  }\n \n}\n\nexport default RestaurantDetailPage","/Users/pham/Desktop/Coding/Project/rest-app/client/src/routes/UpdatePage.tsx",[],[],"/Users/pham/Desktop/Coding/Project/rest-app/client/src/components/Header.tsx",[],[],"/Users/pham/Desktop/Coding/Project/rest-app/client/src/components/AddRestaurant.tsx",[],[],"/Users/pham/Desktop/Coding/Project/rest-app/client/src/components/RestaurantList.tsx",["81"],[],"import React, { useEffect, useContext } from 'react'\nimport { getRestaurants, deleteRestaurant } from '../api/api.ts'\nimport { RestaurantsContext } from '../context/restaurantsContext.tsx'\nimport { useNavigate } from 'react-router-dom'\nimport  Rating  from './Rating.tsx'\n\n\nconst RestaurantList = () => {\n  // const test:RestaurantContextType {\n  //   restaurants,\n  //   setRestaurants(),\n  // }\n  const {context, setContext} = useContext(RestaurantsContext)\n  let navigate = useNavigate();\n\n\n  useEffect(() => {\n    (getRestaurants().then(response => setContext(response.data.restaurants)))\n\n  },[])\n\n  const handleDelete = (e, id:Number) => {\n    e.stopPropagation();\n    deleteRestaurant(id);\n    setContext(context.filter((restaurant) => {\n      return restaurant.id !== id;\n    }) )\n  }\n\n  const handleUpdate = (e, id:Number) => {\n    e.stopPropagation();\n    navigate(`/restaurants/${id}/update`);\n  }\n\n  const handleRestaurantSelect = (id:Number) => {\n    navigate(`/restaurants/${id}`);\n  }\n\n  const renderRating = (restaurant) => {\n    console.log(restaurant)\n    if(!restaurant.count){\n      return <span className=\"text\">0 reviews</span>\n    }\n    return (\n      <>\n      <Rating rating={restaurant.average_rating}/>\n      <span className='text ml-1'>({restaurant.count})</span>\n      </>\n    )\n   \n  }\n\n  return (\n    <div className='list-group'>\n      <table className=\"table table-hover table-dark\">\n        <thead>\n          <tr className=\"bg-primary\">\n            <th scope='col'>Restaurant</th>\n            <th scope='col'>Location</th>\n            <th scope='col'>Price Range</th>\n            <th scope='col'>Ratings</th>\n            <th scope='col'>Edit</th>\n            <th scope='col'>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {context && context.map(restaurant => {\n            return (\n              <tr onClick={() => handleRestaurantSelect(restaurant.id)}key={restaurant.id}>\n                <td>{restaurant.name}</td>\n                <td>{restaurant.location}</td>\n                <td>{'$'.repeat(restaurant.price_range)}</td>\n                <td>{renderRating(restaurant)}</td>\n                <td>\n                  <button onClick={(e) => handleUpdate(e, restaurant.id)} className=\"btn btn-warning\">Update</button>\n                </td>\n                <td>\n                  <button onClick={(e) => handleDelete(e, restaurant.id)} className=\"btn btn-danger\">Delete</button>\n                </td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default RestaurantList","/Users/pham/Desktop/Coding/Project/rest-app/client/src/context/restaurantsContext.tsx",["82"],[],"import React, { useState, createContext, FC } from 'react'\n\ninterface IRestaurant {\n  id: Number;\n  name: String;\n  location: string;\n  price_range: Number;\n}\n\n// export interface RestaurantContextType {\n//   restaurants?: IRestaurant;\n//   setRestaurants: (restaurants:IRestaurant) => void;\n// }\n\ninterface Props {\n  children: React.ReactNode\n}\n\ntype RestaurantContextType = {\n  context: IRestaurant[];\n  setContext: React.Dispatch<React.SetStateAction<any>>\n  addContext: React.Dispatch<React.SetStateAction<any>>\n} \n\nconst IRestaurantContextState = {\n  context: [],\n  setContext: () => {},\n  addContext: () => {},\n}\n\nexport const RestaurantsContext = createContext<RestaurantContextType>(IRestaurantContextState);\n//export const RestaurantsContext = createContext<RestaurantContextType | null>(null);\n\nexport const RestaurantsContextProvider: React.FC<Props> = ({ children }) => {\n  const [context, setContext] = useState([] as any);\n\n  const addContext = (restaurant:any) => {\n    setContext([...context, restaurant])\n  }\n\n  return (\n    <RestaurantsContext.Provider value={{context, setContext, addContext}}>\n      {children}\n    </RestaurantsContext.Provider>\n  )\n};\n\n\n","/Users/pham/Desktop/Coding/Project/rest-app/client/src/components/UpdateRestaurant.tsx",["83"],[],"import React, { useState, useEffect } from 'react'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { getRestaurant, updateRestaurant } from '../api/api.ts'\n\n\nconst UpdateRestaurant = (props) => {\n  const {id} = useParams();\n  const [name, setName] = useState('');\n  const [location, setLocation] = useState('');\n  const [priceRange, setPriceRange] = useState('');\n\n  let navigate = useNavigate();\n\n  const fetchData = async (id:any) => {\n    const response = await getRestaurant(id)\n    setName(response.restaurant.name);\n    setLocation(response.restaurant.location);\n    setPriceRange(response.restaurant.price_range);\n  }\n\n  const handleSubmit = async (e, id:any,name:String,location:String,priceRange:String) => {\n    e.preventDefault();\n    updateRestaurant(id,name,location,priceRange).then(() => {\n      navigate('/');\n    })\n  }\n\n  useEffect(()=> {\n    fetchData(id);\n  }, [])\n  \n  return (\n    <>\n    <form action=\"\">\n      <div className=\"form-group\">\n        <label htmlFor='name'>Name</label>\n        <input \n          value={name} \n          onChange={(e) => setName(e.target.value)} \n          id='name' \n          className='form-control' \n          type='text'>\n        </input>\n      </div>\n    </form>\n    <form action=\"\">\n      <div className=\"form-group\">\n        <label htmlFor='location'>Location</label>\n        <input \n          value={location} \n          onChange={(e) => setLocation(e.target.value)} \n          id='location' \n          className='form-control' \n          type='text'>\n        </input>\n      </div>\n    </form>\n    <form action=\"\">\n      <div className=\"form-group\">\n        <label htmlFor='price_range'>Price Range</label>\n          <input \n            value={priceRange} \n            onChange={(e) => setPriceRange(e.target.value)} \n            id='price_range' \n            className='form-control' \n            type='Number'>\n          </input>      \n       </div>\n      <button type='submit' onClick={(e) => handleSubmit(e,id,name,location,priceRange)} className=\"btn btn-primary\">Submit</button>\n    </form>\n    </>\n  )\n}\n\nexport default UpdateRestaurant","/Users/pham/Desktop/Coding/Project/rest-app/client/src/api/api.ts",["84","85","86"],[],"/Users/pham/Desktop/Coding/Project/rest-app/client/src/components/Rating.tsx",["87"],[],"import React from 'react'\nimport {FontAwesomeIcon } from 'font-awesome'\n\nconst Rating = ({rating}) => {\n  const stars:any[] = []; \n  for (let i = 1; i <=5 ; i++){\n    if (i <= rating){\n      stars.push(<i key={i} className=\"fa-solid fa-star\"></i>);\n    } else if (i === Math.ceil(rating) && !Number.isInteger(rating)){\n      stars.push(<i key={i} className=\"fa-solid fa-star-half-stroke\"></i>);\n    } else {\n      stars.push(<i key={i} className=\"fa-regular fa-star\"></i>);\n    } \n\n  }\n  return (\n    <>\n    {stars}\n    </>\n  )\n}\n\nexport default Rating","/Users/pham/Desktop/Coding/Project/rest-app/client/src/components/Reviews.tsx",[],[],"/Users/pham/Desktop/Coding/Project/rest-app/client/src/components/AddReview.tsx",[],[],{"ruleId":"88","severity":1,"message":"89","line":7,"column":10,"nodeType":"90","messageId":"91","endLine":7,"endColumn":18},{"ruleId":"92","severity":1,"message":"93","line":19,"column":5,"nodeType":"94","endLine":19,"endColumn":7,"suggestions":"95"},{"ruleId":"92","severity":1,"message":"96","line":20,"column":5,"nodeType":"94","endLine":20,"endColumn":7,"suggestions":"97"},{"ruleId":"88","severity":1,"message":"98","line":1,"column":42,"nodeType":"90","messageId":"91","endLine":1,"endColumn":44},{"ruleId":"92","severity":1,"message":"93","line":30,"column":6,"nodeType":"94","endLine":30,"endColumn":8,"suggestions":"99"},{"ruleId":"88","severity":1,"message":"100","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":30},{"ruleId":"88","severity":1,"message":"101","line":11,"column":7,"nodeType":"90","messageId":"91","endLine":11,"endColumn":14},{"ruleId":"88","severity":1,"message":"102","line":37,"column":9,"nodeType":"90","messageId":"91","endLine":37,"endColumn":17},{"ruleId":"88","severity":1,"message":"103","line":2,"column":9,"nodeType":"90","messageId":"91","endLine":2,"endColumn":24},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["104"],"React Hook useEffect has a missing dependency: 'setContext'. Either include it or remove the dependency array.",["105"],"'FC' is defined but never used.",["106"],"'AxiosResponse' is defined but never used.","'baseURL' is assigned a value but never used.","'response' is assigned a value but never used.","'FontAwesomeIcon' is defined but never used.",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"desc":"107","fix":"111"},"Update the dependencies array to be: [id]",{"range":"112","text":"113"},"Update the dependencies array to be: [setContext]",{"range":"114","text":"115"},{"range":"116","text":"113"},[585,587],"[id]",[598,600],"[setContext]",[898,900]]