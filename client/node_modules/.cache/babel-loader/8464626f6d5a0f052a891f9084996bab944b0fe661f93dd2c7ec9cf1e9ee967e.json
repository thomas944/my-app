{"ast":null,"code":"import axios from 'axios';\nconst baseURL = process.env.NODE_ENV === 'production' ? 'api/v1/restaurants' : 'http://localhost:4000/api/v1/restaurants';\nexport const getRestaurants = async () => {\n  const instance = axios.create({\n    baseURL: 'http://localhost:4000/api/v1/restaurants'\n  });\n  const response = await instance.get('/');\n  return response.data;\n};\nexport const addRestaurant = async (name, location, price_range) => {\n  const instance = axios.create({\n    baseURL: 'http://localhost:4000/api/v1/restaurants'\n  });\n  const response = await instance.post('/', {\n    name,\n    location,\n    price_range\n  });\n  return response.data.data;\n};\nexport const deleteRestaurant = async id => {\n  const instance = axios.create({\n    baseURL: 'http://localhost:4000/api/v1/restaurants'\n  });\n  const response = await instance.delete(`/${id}`);\n};\nexport const getRestaurant = async id => {\n  const instance = axios.create({\n    baseURL: 'http://localhost:4000/api/v1/restaurants'\n  });\n  const response = await instance.get(`/${id}`);\n  return response.data.data;\n};\nexport const updateRestaurant = async (id, name, location, price_range) => {\n  const instance = axios.create({\n    baseURL: 'http://localhost:4000/api/v1/restaurants'\n  });\n  const updatedRestaurant = await instance.put(`/${id}`, {\n    name,\n    location,\n    price_range\n  });\n  return updatedRestaurant;\n};\nexport const addReview = async (restaurant_id, name, review, rating) => {\n  const instance = axios.create({\n    baseURL: 'http://localhost:4000/api/v1/restaurants'\n  });\n  const newReview = await instance.post(`/${restaurant_id}/addReview`, {\n    name,\n    review,\n    rating\n  });\n  console.log(newReview);\n};","map":{"version":3,"names":["axios","baseURL","process","env","NODE_ENV","getRestaurants","instance","create","response","get","data","addRestaurant","name","location","price_range","post","deleteRestaurant","id","delete","getRestaurant","updateRestaurant","updatedRestaurant","put","addReview","restaurant_id","review","rating","newReview","console","log"],"sources":["/Users/pham/Desktop/Coding/Project/rest-app/client/src/api/api.ts"],"sourcesContent":["import axios, { AxiosResponse, AxiosInstance } from 'axios'\n\ninterface IRestaurant {\n  id: Number;\n  name: String;\n  location: string;\n  price_range: Number;\n}\n\n\nconst baseURL = process.env.NODE_ENV === 'production' ? 'api/v1/restaurants' : \n'http://localhost:4000/api/v1/restaurants'\nexport const getRestaurants = async ():Promise<IRestaurant[]> => {\n  const instance:AxiosInstance = axios.create({\n    baseURL: 'http://localhost:4000/api/v1/restaurants'\n  })\n  const response = await instance.get('/')\n  return response.data\n}\n\nexport const addRestaurant = async (name:String,location:String,price_range:Number) => {\n  const instance:AxiosInstance = axios.create({\n    baseURL: 'http://localhost:4000/api/v1/restaurants'\n  })\n  const response = await instance.post('/', {\n    name,\n    location,\n    price_range\n  })\n  return response.data.data\n}\n\nexport const deleteRestaurant = async (id:Number) => {\n  const instance:AxiosInstance = axios.create({\n    baseURL: 'http://localhost:4000/api/v1/restaurants'\n  })\n  const response = await instance.delete(`/${id}`);\n}\n\nexport const getRestaurant = async (id:Number) => {\n  const instance:AxiosInstance = axios.create({\n    baseURL: 'http://localhost:4000/api/v1/restaurants'\n  })\n  const response = await instance.get(`/${id}`);\n  return response.data.data\n}\n\nexport const updateRestaurant = async (id:String,name:String,location:String,price_range:Number) => {\n  const instance:AxiosInstance = axios.create({\n    baseURL: 'http://localhost:4000/api/v1/restaurants'\n  })\n  const updatedRestaurant = await instance.put(`/${id}`,{\n    name,\n    location,\n    price_range\n  })\n\n  return updatedRestaurant;\n}\n\nexport const addReview = async (restaurant_id:String,name:String,review:String,rating:Number) => {\n  const instance:AxiosInstance = axios.create({\n    baseURL: 'http://localhost:4000/api/v1/restaurants'\n  })\n  const newReview = await instance.post(`/${restaurant_id}/addReview`,{\n    name,\n    review,\n    rating\n  })\n  console.log(newReview)\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAwC,OAAO;AAU3D,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG,oBAAoB,GAC5E,0CAA0C;AAC1C,OAAO,MAAMC,cAAc,GAAG,YAAmC;EAC/D,MAAMC,QAAsB,GAAGN,KAAK,CAACO,MAAM,CAAC;IAC1CN,OAAO,EAAE;EACX,CAAC,CAAC;EACF,MAAMO,QAAQ,GAAG,MAAMF,QAAQ,CAACG,GAAG,CAAC,GAAG,CAAC;EACxC,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,OAAOC,IAAW,EAACC,QAAe,EAACC,WAAkB,KAAK;EACrF,MAAMR,QAAsB,GAAGN,KAAK,CAACO,MAAM,CAAC;IAC1CN,OAAO,EAAE;EACX,CAAC,CAAC;EACF,MAAMO,QAAQ,GAAG,MAAMF,QAAQ,CAACS,IAAI,CAAC,GAAG,EAAE;IACxCH,IAAI;IACJC,QAAQ;IACRC;EACF,CAAC,CAAC;EACF,OAAON,QAAQ,CAACE,IAAI,CAACA,IAAI;AAC3B,CAAC;AAED,OAAO,MAAMM,gBAAgB,GAAG,MAAOC,EAAS,IAAK;EACnD,MAAMX,QAAsB,GAAGN,KAAK,CAACO,MAAM,CAAC;IAC1CN,OAAO,EAAE;EACX,CAAC,CAAC;EACF,MAAMO,QAAQ,GAAG,MAAMF,QAAQ,CAACY,MAAM,CAAE,IAAGD,EAAG,EAAC,CAAC;AAClD,CAAC;AAED,OAAO,MAAME,aAAa,GAAG,MAAOF,EAAS,IAAK;EAChD,MAAMX,QAAsB,GAAGN,KAAK,CAACO,MAAM,CAAC;IAC1CN,OAAO,EAAE;EACX,CAAC,CAAC;EACF,MAAMO,QAAQ,GAAG,MAAMF,QAAQ,CAACG,GAAG,CAAE,IAAGQ,EAAG,EAAC,CAAC;EAC7C,OAAOT,QAAQ,CAACE,IAAI,CAACA,IAAI;AAC3B,CAAC;AAED,OAAO,MAAMU,gBAAgB,GAAG,OAAOH,EAAS,EAACL,IAAW,EAACC,QAAe,EAACC,WAAkB,KAAK;EAClG,MAAMR,QAAsB,GAAGN,KAAK,CAACO,MAAM,CAAC;IAC1CN,OAAO,EAAE;EACX,CAAC,CAAC;EACF,MAAMoB,iBAAiB,GAAG,MAAMf,QAAQ,CAACgB,GAAG,CAAE,IAAGL,EAAG,EAAC,EAAC;IACpDL,IAAI;IACJC,QAAQ;IACRC;EACF,CAAC,CAAC;EAEF,OAAOO,iBAAiB;AAC1B,CAAC;AAED,OAAO,MAAME,SAAS,GAAG,OAAOC,aAAoB,EAACZ,IAAW,EAACa,MAAa,EAACC,MAAa,KAAK;EAC/F,MAAMpB,QAAsB,GAAGN,KAAK,CAACO,MAAM,CAAC;IAC1CN,OAAO,EAAE;EACX,CAAC,CAAC;EACF,MAAM0B,SAAS,GAAG,MAAMrB,QAAQ,CAACS,IAAI,CAAE,IAAGS,aAAc,YAAW,EAAC;IAClEZ,IAAI;IACJa,MAAM;IACNC;EACF,CAAC,CAAC;EACFE,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;AACxB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}